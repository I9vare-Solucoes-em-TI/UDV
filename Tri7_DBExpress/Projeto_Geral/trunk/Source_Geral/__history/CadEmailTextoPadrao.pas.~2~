unit CadEmailTextoPadrao;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, CadBasico, Menus, FMTBcd, cxEdit, DB, cxDBEdit,
  cxTextEdit,
  FrameEditorSimples, cxGridLevel, cxGridCustomTableView, cxGridTableView,
  cxGridDBTableView, cxClasses, cxControls, cxGridCustomView, cxGrid,
  cxSplitter, cxContainer, cxLabel, DBClient, Provider, SqlExpr, ActnList,
  ComCtrls, StdCtrls, cxButtons, ExtCtrls,


  System.Actions, cxGraphics, cxLookAndFeels, cxLookAndFeelPainters, cxStyles,
  cxCustomData, cxFilter, cxData, cxDataStorage, cxNavigator, cxDBData,
  cxCheckBox, cxMaskEdit, cxDropDownEdit, cxLookupEdit, cxDBLookupEdit,
  cxDBLookupComboBox, cxImageComboBox;

type
  TfrmCademailTextoPadrao = class(TfrmCadBasico)
    cxLabel1: TcxLabel;
    cxLabel5: TcxLabel;
    Panel1: TPanel;
    cxSplitter1: TcxSplitter;
    grdBasica: TcxGrid;
    grdBasicaDBTableView1: TcxGridDBTableView;
    cxGridBasicaDBCodigo: TcxGridDBColumn;
    cxGridBasicaDBDescricao: TcxGridDBColumn;
    cxGridBasicaDBSituacao: TcxGridDBColumn;
    grdBasicaLevel1: TcxGridLevel;
    cxSplitter2: TcxSplitter;
    fmeEditorSimples: TfmeEditorSimples;
    MarcacaomAnual1: TMenuItem;
    edtDescricao: TcxDBTextEdit;
    grdBasicaDBTableView1Column1: TcxGridDBColumn;
    edtAssunto: TcxDBTextEdit;
    ClientAncestralEMAIL_TEXTO_PADRAO_ID: TFMTBCDField;
    ClientAncestralDESCRICAO: TStringField;
    ClientAncestralTEXTO: TBlobField;
    ClientAncestralASSUNTO: TStringField;
    ClientAncestralTIPO_EMAIL: TStringField;
    ClientAncestralASSUNTO_PADRAO: TStringField;
    cxLabel2: TcxLabel;
    grdBasicaDBTIPO_EMAIL: TcxGridDBColumn;
    cxdbTipoEmail: TcxDBImageComboBox;
    procedure ExecuteIncluirExecute(Sender: TObject);
    procedure ExecuteAlterarExecute(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure fmeEditorSimpleswptTextoChange(Sender: TObject);
    procedure ExecuteGravarExecute(Sender: TObject);
    procedure ClientAncestralAfterScroll(DataSet: TDataSet);
  private
    { Private declarations }
  public
    procedure SetState (AState : TDataSetState);override;
    procedure LoadData; override;
  end;

var
  frmCademailTextoPadrao: TfrmCademailTextoPadrao;

implementation

uses
  Lookup, Controles, Rotinas;

{$R *.dfm}

procedure TfrmCademailTextoPadrao.ClientAncestralAfterScroll(DataSet: TDataSet);
begin
  inherited;
  fmeEditorSimples.wptTexto.AsString := DeCompressString(ClientAncestral.FieldByName('TEXTO').AsString);
end;

procedure TfrmCademailTextoPadrao.ExecuteAlterarExecute(Sender: TObject);
begin
  inherited;
  edtDescricao.SetFocus;
end;

procedure TfrmCademailTextoPadrao.ExecuteGravarExecute(Sender: TObject);
const
 vcTipoEnvio = 2;
var
  i: Integer;
  viExisteCampoVazio: Boolean;
begin

  with grdBasicaDBTableView1.ViewData do begin
    for i := 0 to RowCount - 1 do begin
      if Rows[i].Values[vcTipoEnvio] = null then begin
        viExisteCampoVazio := True;
        cxdbTipoEmail.SetFocus;
        Break;
      end;
    end;

    if viExisteCampoVazio then begin
      Application.MessageBox('Por favor, Definir tipo email!!!', 'Informação', MB_ICONINFORMATION + MB_OK);
      Exit;
    end;
  end;

  VerificarPreenchimentoEDT_DB(edtDescricao.Text, 'Descrição', edtDescricao);
  VerificarPreenchimentoEDT_DB(edtAssunto.Text, 'Assunto', edtAssunto);

  ClientAncestral.FieldByName('TEXTO').AsString := CompressString(fmeEditorSimples.wptTexto.AsString);
  inherited;
  ClientAncestral.Refresh;
end;

procedure TfrmCademailTextoPadrao.ExecuteIncluirExecute(Sender: TObject);
begin
  inherited;
  edtDescricao.SetFocus;
end;

procedure TfrmCademailTextoPadrao.fmeEditorSimpleswptTextoChange(Sender: TObject);
begin
  inherited;
  if State = dsBrowse then
  begin
    ExecuteAlterar.Execute;
    fmeEditorSimples.wptTexto.SetFocus;
  end;
end;

procedure TfrmCademailTextoPadrao.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  inherited;
  dtmLookup.AtualizarTabelas;
  Action                 := caFree;
  frmCademailTextoPadrao := nil;
end;

procedure TfrmCademailTextoPadrao.FormCreate(Sender: TObject);
begin
  inherited;
  vgNomeTabela    := 'G_EMAIL_TEXTO_PADRAO';
  vgChavePrimaria := 'EMAIL_TEXTO_PADRAO_ID';
end;

procedure TfrmCademailTextoPadrao.LoadData;
begin
  inherited;
  grdBasica.Enabled := State = dsBrowse;
end;

procedure TfrmCademailTextoPadrao.SetState(AState: TDataSetState);
begin
  ClientAncestral.Open;
  inherited;
end;

end.
