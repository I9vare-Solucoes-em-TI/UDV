unit EurekaLog;

interface

uses
  System.SysUtils, ETypes, EClasses, ExceptionLog7, StrUtils, Types, Controles;

  procedure ConfigurarEurekaLogEvents;
  procedure ConfigurarMensagensEurekaLog;

implementation

procedure ConfigurarEurekaLogEvents;
var
  i: Integer;
  viCaminhoLog: string;
  viUtilizaCaptureScreen: string;
  viAtivaLog: Boolean;
  viSistemaPermitido: Boolean;
  viListaSistema: TStringDynArray;
begin
  if not CurrentEurekaLogOptions.ActivateEurekaLog then
    Exit;

  viAtivaLog := dtmControles.BuscarParametroOutroSistema('ATIVAR_LOG', 'LOG', 'PRINCIPAL','5') = 'S';
  SetEurekaLogState(viAtivaLog);
  if not CurrentEurekaLogOptions.Active then
  begin
    CurrentEurekaLogOptions.SenderClasses := esmNoSend;  // Desabilita Envio
    CurrentEurekaLogOptions.sndScreenshot := ssNone;
    Exit;
  end;

  viCaminhoLog           := dtmControles.BuscarParametroOutroSistema('CAMINHO_ARQUIVO_LOG', 'LOG', 'PRINCIPAL','5');
  viUtilizaCaptureScreen := dtmControles.BuscarParametroOutroSistema('UTILIZA_CAPTURE_SCREEN', 'LOG', 'PRINCIPAL','5');
  viListaSistema := SplitString(dtmControles.BuscarParametroOutroSistema('HABILITA_LOG_SISTEMA', 'LOG', 'PRINCIPAL','5'),';');

  viSistemaPermitido := False;
  for i := Low(viListaSistema) to High(viListaSistema) - 1 do
  begin
    if IntToStr(vgId) = viListaSistema[i] then
    begin
      viSistemaPermitido := True;
      Break;
    end;
  end;

  if not viSistemaPermitido then
    Exit;

  if CurrentEurekaLogOptions.Active then
  begin
    CurrentEurekaLogOptions.SenderClasses := esmSMTPClient;
    CurrentEurekaLogOptions.EMailMessage := 'Padrão';
    CurrentEurekaLogOptions.sndShowSendDialog := False; // Desabilita a tela de processando envio

    if viUtilizaCaptureScreen = 'S' then
      CurrentEurekaLogOptions.sndScreenshot := ssForegroundWindow
    else
      CurrentEurekaLogOptions.sndScreenshot := ssNone;

    if Trim(viCaminhoLog) <> '' then
      CurrentEurekaLogOptions.OutputPath :=  viCaminhoLog + '\' + FormatDateTime('DDMMYYYY_HHMM', Now) + '.Elf';

    ConfigurarMensagensEurekaLog;
  end;
end;

procedure ConfigurarMensagensEurekaLog;
var
  viTipoMsg: string;
begin
  viTipoMsg := dtmControles.BuscarParametroOutroSistema('TIPO_MENSAGENS', 'LOG', 'PRINCIPAL','5');

  if not CurrentEurekaLogOptions.Active then
    Exit;

  if vgLogin = 'I937' then
  begin // Suporte: Com a opção de visualizar os detalhes (Apenas usuário I937)
    CurrentEurekaLogOptions.ExceptionDialogType := edtMSClassic;
    CurrentEurekaLogOptions.edoShowSendErrorReportOption := True;
    CurrentEurekaLogOptions.edoRestartChecked := True;
    CurrentEurekaLogOptions.edoShowDetailsButton := True;
    Exit;
  end;

  if viTipoMsg = 'S' then
  begin // Simples: Minimo de informação.
    CurrentEurekaLogOptions.ExceptionDialogType := edtMSClassic;
    CurrentEurekaLogOptions.edoShowSendErrorReportOption := False;
    CurrentEurekaLogOptions.edoShowDetailsButton := False;
  end
  else if viTipoMsg = 'P' then
  begin // Padrão: Com a opção de enviar msg Botões (Sim/Não)
    CurrentEurekaLogOptions.ExceptionDialogType := edtMSClassic;
    CurrentEurekaLogOptions.edoShowSendErrorReportOption := True;
    CurrentEurekaLogOptions.edoSendErrorReportChecked := True;
    CurrentEurekaLogOptions.edoShowEMailControl := False;
    CurrentEurekaLogOptions.edoShowDetailsButton := False;
  end;
end;

end.
