unit FDControle;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
  FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.Comp.UI, FireDAC.Phys.IBBase;

type
  TDataModule2 = class(TDataModule)
    FDConnection: TFDConnection;
    FDPhysFBDriverLink: TFDPhysFBDriverLink;
    FDGUIxWaitCursor: TFDGUIxWaitCursor;
    FDQuery: TFDQuery;
    procedure DataModuleCreate(Sender: TObject);
    procedure DataModuleDestroy(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure ExecuteSQL(vpSql : string);
  end;

var
  DataModule2: TDataModule2;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TDataModule2.DataModuleCreate(Sender: TObject);
var
  viParams : string;
begin
  viParams := 'Database=' +
              'User_Name= '+
              'Password= '+
              'Port=3050 '+
              'CharacterSet=ISO8859_1 '+
              'DriverID=FB ';

  FDConnection.Close;
  FDConnection.Params.Clear;
  FDConnection.Params.Text := viParams;
  FDConnection.Open;
end;

procedure TDataModule2.DataModuleDestroy(Sender: TObject);
begin
  FDConnection.Close;
end;

procedure TDataModule2.ExecuteSQL(vpSql: string);
begin
  FDQuery.SQL.Clear;
  FDQuery.SQL.Text := vpSql;
  FDQuery.ExecSQL;
end;

end.